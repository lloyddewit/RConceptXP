<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="410" d:DesignHeight="495"
             x:Class="RConceptXP.Views.BoxplotView"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:views="clr-namespace:RConceptXP.Views"
             xmlns:vm="clr-namespace:RConceptXP.ViewModels"
             x:DataType="vm:BoxplotViewModel"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch">

    <Border Grid.Row="0" Grid.Column="1"
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    CornerRadius="5"
                    Padding="5">
    <DockPanel>
        <StackPanel DockPanel.Dock="Top">

            <!-- Radio buttons -->
            <UniformGrid Columns="3">
                <RadioButton
                    Classes="accent"
                    Content="Boxplot"
                    GroupName="BoxplotType"
                    HorizontalAlignment="Right"
                    IsChecked="{Binding IsBoxPlot}"
                    Name="isBoxplot"
                />
                <RadioButton
                    Classes="accent"
                    Content="Jitter Plot"
                    GroupName="BoxplotType"
                    HorizontalAlignment="Center"
                    IsChecked="{Binding IsJitter}"
                    Name="isJitter"
                />
                <RadioButton
                    Classes="accent"
                    Content="Violin Plot"
                    GroupName="BoxplotType"
                    HorizontalAlignment="Left"
                    IsChecked="{Binding IsViolin}"
                    Name="isViolin"
                />
            </UniformGrid>

            <TabControl Margin="0 5 0 0" SelectedIndex="{Binding SelectedTabIndex}>">
                <TabItem Header="Main">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>0</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <StackPanel>
                        <!-- Main area -->
                        <StackPanel Orientation="Horizontal">
                            <StackPanel>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                                        <StackPanel>
                                            <TextBlock Text="Data Frame:"/>
                                            <ComboBox  Classes="accent" SelectedIndex="0">
                                                <ComboBoxItem>survey</ComboBoxItem>
                                            </ComboBox>
                                            <ListBox
                                                Background="{StaticResource BackgroundTextBlock}"
                                                Classes="accent"
                                                Height="80"
                                                ItemsSource="{Binding ColumnNames}"
                                                Margin="0 5 0 0"
                                                Name="columns"
                                                Selection="{Binding Selection}"
                                                SelectionMode="AlwaysSelected,Single,Toggle"
                                                />                                            
                                        </StackPanel>
                                        <StackPanel Margin="10 0 0 0">
                                            <SplitButton
                                                Classes="accent"
                                                Command="{Binding OnSelectorAddClickCommand}"
                                                Content="Add"
                                                IsEnabled="{Binding !!#columns.ItemCount}"
                                                Margin="0 50 0 0">
                                                <SplitButton.Flyout>
                                                    <MenuFlyout Placement="Bottom">
                                                        <MenuItem
                                                            Command="{Binding OnSelectorAddClickCommand}"
                                                            Header="Add Selected"
                                                            />
                                                        <MenuItem
                                                            Command="{Binding OnSelectorAddAllClickCommand}"
                                                            Header="Add All"
                                                            IsEnabled="False"
                                                            Name="addAllOption"
                                                            />
                                                        <Separator/>
                                                        <MenuItem Header="Help"/>
                                                    </MenuFlyout>
                                                </SplitButton.Flyout>
                                            </SplitButton>                                            
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Margin="0 20 0 0">
                                    <CheckBox
                                        Classes="accent"
                                        Content="Horizontal Plot"
                                        IsChecked="{Binding IsHorizontalBoxPlot}"
                                        />
                                    <StackPanel Margin="0 5 0 0" Orientation="Horizontal">
                                        <CheckBox
                                            Classes="accent"
                                            Content="Group to Connect"
                                            IsChecked="{Binding IsGroupToConnect}"
                                            Name="groupToConnect"
                                            />
                                        <ComboBox
                                            Classes="theme-soft accent"
                                            IsVisible="{Binding #groupToConnect.IsChecked}"
                                            ItemsSource="{Binding GroupToConnectSummaries, Mode=OneTime}"
                                            Margin="10 0 0 0"
                                            Width="70"
                                            SelectedIndex="0"
                                            SelectedItem="{Binding GroupToConnectSummary, Mode=TwoWay}"
                                            />
                                    </StackPanel>
                                    <StackPanel
                                        IsVisible="{Binding !#isJitter.IsChecked}"
                                        Margin="0 5 0 0"
                                        Orientation="Horizontal"
                                        >
                                        <CheckBox
                                            Classes="accent"
                                            Content="Width"
                                            IsChecked="{Binding IsWidth}"
                                            IsEnabled="{Binding IsWidthEnabled}"
                                            Name="isWidth"
                                            />
                                        <TextBox
                                            Classes="theme-soft accent"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Height="25"
                                            TextAlignment="Right"
                                            IsEnabled="{Binding #isWidth.IsEnabled}"
                                            IsVisible="{Binding #isWidth.IsChecked}"
                                            Margin="5 0 0 0"
                                            Text="{Binding Width}"
                                            Width="60"
                                            />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Margin="50 20 0 0">
                                <TextBlock Text="Variable(s):"/>
                                <UniformGrid Columns="2">
                                    <RadioButton
                                        Classes="accent"
                                        Content="Single"
                                        GroupName="VariablesType"
                                        IsChecked="{Binding IsSingle}"
                                        Name="singleOption"
                                        >
                                        <i:Interaction.Behaviors>
                                            <ia:EventTriggerBehavior
                                                EventName="Checked"
                                                SourceObject="{Binding #singleOption}">
                                                <ia:InvokeCommandAction
                                                    Command="{Binding OnReceiverGotFocusCommand}"
                                                    CommandParameter="{Binding #singleVariableTextBox}"/>
                                            </ia:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </RadioButton>
                                    <RadioButton
                                        Content="Multiple"
                                        Classes="accent"
                                        GroupName="VariablesType"
                                        IsChecked="{Binding !IsSingle}"
                                        Name="multipleOption"
                                        >
                                        <i:Interaction.Behaviors>
                                            <ia:EventTriggerBehavior
                                                EventName="Checked"
                                                SourceObject="{Binding #multipleOption}">
                                                <ia:InvokeCommandAction
                                                    Command="{Binding OnReceiverGotFocusCommand}"
                                                    CommandParameter="{Binding #multipleVariableTextBox}"/>
                                            </ia:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </RadioButton>
                                </UniformGrid>
                                <TextBox
                                    Classes="accent"
                                    IsReadOnly="True"
                                    IsVisible="{Binding #singleOption.IsChecked}"
                                    Margin="0 5 0 0"
                                    Name="singleVariableTextBox"
                                    Text="{Binding SingleVariable}"
                                    >
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior
                                            EventName="GotFocus"
                                            SourceObject="{Binding #singleVariableTextBox}">
                                            <ia:InvokeCommandAction
                                                Command="{Binding OnReceiverGotFocusCommand}"
                                                CommandParameter="{Binding #singleVariableTextBox}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBox
                                    Classes="accent"
                                    Height="70"
                                    IsReadOnly="True"
                                    IsVisible="{Binding #multipleOption.IsChecked}"
                                    Margin="0 5 0 0"
                                    Name="multipleVariableTextBox"
                                    Text="{Binding MultipleVariables}"
                                    >
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior
                                            EventName="GotFocus"
                                            SourceObject="{Binding #multipleVariableTextBox}">
                                            <ia:InvokeCommandAction
                                                Command="{Binding OnReceiverGotFocusCommand}"
                                                CommandParameter="{Binding #multipleVariableTextBox}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBlock Text="Factor (Optional):" Margin="0 10 0 0"/>
                                <TextBox
                                    Classes="theme-soft accent"
                                    HorizontalAlignment="Left"
                                    IsEnabled="{Binding #singleOption.IsChecked}"
                                    IsReadOnly="True"
                                    Margin="0 5 0 0"
                                    Name="factorTextBox"
                                    Text="{Binding Factor}"
                                    Width="100"
                                    >
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior
                                            EventName="GotFocus"
                                            SourceObject="{Binding #factorTextBox}">
                                            <ia:InvokeCommandAction
                                                Command="{Binding OnReceiverGotFocusCommand}"
                                                CommandParameter="{Binding ElementName=factorTextBox}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBlock Text="Second Factor (Optional):" Margin="0 5 0 0"/>
                                <TextBox
                                    Classes="theme-soft accent"
                                    HorizontalAlignment="Left"
                                    IsReadOnly="True"
                                    Margin="0 5 0 0"
                                    Name="secondFactorTextBox"
                                    Text="{Binding SecondFactor}"
                                    Width="100"
                                    >
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior
                                            EventName="GotFocus"
                                            SourceObject="{Binding #secondFactorTextBox}">
                                            <ia:InvokeCommandAction
                                                Command="{Binding OnReceiverGotFocusCommand}"
                                                CommandParameter="{Binding ElementName=secondFactorTextBox}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <Grid RowDefinitions="22, Auto">
                                    <CheckBox
                                        Grid.Row="0"
                                        Classes="accent"
                                        Content="Variable Width"
                                        IsChecked="{Binding IsVarWidth}"
                                        Margin="0 5 0 0">
                                        <CheckBox.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                <Binding Path="#isBoxplot.IsChecked" />
                                                <Binding Path="!#isTufte.IsChecked" />
                                            </MultiBinding>
                                        </CheckBox.IsVisible>
                                    </CheckBox>
                                    <CheckBox
                                        Grid.Row="1"
                                        Classes="accent"
                                        Content="Tufte Boxplots"
                                        IsChecked="{Binding IsTufte}"
                                        IsVisible="{Binding #isBoxplot.IsChecked}"
                                        Margin="0 5 0 0"
                                        Name="isTufte"
                                        />
                                </Grid>
                            </StackPanel>
                        </StackPanel>

                        <!-- Add boxplot -->
                        <StackPanel
                            IsVisible="{Binding !#isBoxplot.IsChecked}"
                            Margin="0 5 0 0"
                            Orientation="Horizontal"
                            >
                            <CheckBox
                                Classes="accent"
                                Content="Add Boxplot"
                                IsChecked="{Binding IsBoxPlotExtra}"
                                Name="addBoxplot"
                                />
                            <TextBlock
                                Margin="10 5 0 0"
                                IsVisible="{Binding #addBoxplot.IsChecked}"
                                Text="Width:"
                                />
                            <NumericUpDown
                                Classes="theme-soft accent"
                                FormatString="0.00"
                                Increment="0.01"
                                IsVisible="{Binding #addBoxplot.IsChecked}"
                                Margin="5 0 0 0"
                                Maximum="1"
                                Minimum="0"
                                Value="{Binding WidthExtra}"
                                Width="60"/>
                        </StackPanel>

                        <!-- Add points -->
                        <StackPanel IsVisible="{Binding !#isJitter.IsChecked}" Orientation="Horizontal" Margin="0 5 0 0">
                            <CheckBox
                                Classes="accent"
                                Content="Add Points"
                                IsChecked="{Binding IsAddPoints}"
                                Name="isAddPoints"
                                />
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding #isAddPoints.IsChecked}" >
                                <TextBlock Text="Jitter:" Margin="10 0 0 0" VerticalAlignment="Center"/>
                                <NumericUpDown
                                    Classes="theme-soft accent"
                                    FormatString="0.00"
                                    Increment="0.01"
                                    Margin="5 0 0 0"
                                    Minimum="0"
                                    Value="{Binding JitterExtra}"
                                    Width="60"
                                    />
                                <TextBlock Text="Transparency:" Margin="10 0 0 0" VerticalAlignment="Center"/>
                                <NumericUpDown
                                    Classes="theme-soft accent"
                                    FormatString="0.00"
                                    Increment="0.01"
                                    Margin="5 0 0 0"
                                    Maximum="1"
                                    Minimum="0"
                                    Value="{Binding Transparency}"
                                    Width="60"
                                    />
                            </StackPanel>
                        </StackPanel>

                        <!-- Legend and Facet By -->
                        <Grid ColumnDefinitions="Auto,130, Auto, Auto"
                              RowDefinitions="Auto Auto">
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="Facet By:"/>
                            <CheckBox
                                Classes="accent"
                                Content="Legend"
                                Grid.Column="0"
                                Grid.Row="1"
                                IsChecked="{Binding IsLegend}"
                                Name="isLegend"
                                />
                            <ComboBox
                                Classes="theme-soft accent"
                                Grid.Column="1"
                                Grid.Row="1"
                                IsVisible="{Binding #isLegend.IsChecked}"
                                ItemsSource="{Binding LegendPositions, Mode=OneTime}"
                                SelectedIndex="0"
                                SelectedItem="{Binding LegendPosition, Mode=TwoWay}"
                                >
                            </ComboBox>
                            <TextBox
                                Classes="theme-soft accent"
                                Grid.Row="1"
                                Grid.Column="2"
                                Height="25"
                                IsReadOnly="True"
                                Margin="0 5 0 0"
                                Name="facetByTextBox"
                                Text="{Binding FacetBy}"
                                Width="90"
                                >
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior
                                        EventName="GotFocus"
                                        SourceObject="{Binding #facetByTextBox}">
                                        <ia:InvokeCommandAction
                                            Command="{Binding OnReceiverGotFocusCommand}"
                                            CommandParameter="{Binding ElementName=facetByTextBox}"/>
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <ComboBox
                                Classes="theme-soft accent"
                                Grid.Row="1"
                                Grid.Column="3"
                                ItemsSource="{Binding FacetByTypes, Mode=OneTime}"
                                Margin="5 5 0 0"
                                Name="facetByComboBox"
                                SelectedItem="{Binding FacetByType, Mode=TwoWay}"
                                SelectedIndex="0"
                                Width="90"
                                >
                            </ComboBox>
                        </Grid>

                        <!-- Save graph -->
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                Classes="accent"
                                Content="Save Graph"
                                IsChecked="{Binding IsSaveGraph}"
                                Margin="0 5 0 0"
                                Name="isSaveGraph"
                                />
                            <AutoCompleteBox
                                ItemsSource="{Binding SaveNames, Mode=OneTime}"
                                Classes="theme-soft accent"
                                IsVisible="{Binding #isSaveGraph.IsChecked}"
                                Margin="5 5 0 0"
                                Name="SaveGraphAutoCompleteBox"
                                Text="{Binding SaveName}"
                                VerticalAlignment="Center"
                                Width="220"
                                >
                            </AutoCompleteBox>
                        </StackPanel>

                        <!-- Comment -->
                        <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                            <CheckBox
                                Classes="accent"
                                Content="Comment"
                                IsChecked="true"
                                Name="isComment"
                                />
                            <TextBox
                                Classes="theme-soft accent"
                                IsVisible="{Binding #isComment.IsChecked}"
                                Margin="5 0 0 0"
                                Text="{Binding Comment}"
                                Width="227"
                                />
                        </StackPanel>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Data">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>1</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Data content goes here." />
                </TabItem>
                <TabItem Header="Plot">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>2</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Plot content goes here." />
                </TabItem>
                <TabItem Header="Boxplot">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>3</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Boxplot content goes here." />
                </TabItem>
                <TabItem Header="Summary" IsVisible="{Binding #isBoxplot.IsChecked}">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>4</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Summary content goes here." />
                </TabItem>
                <TabItem Header="Tufte">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>5</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Tufte content goes here." />
                </TabItem>
                <TabItem Header="Jitter" IsVisible="{Binding #isJitter.IsChecked}">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>6</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Jitter content goes here." />
                </TabItem>
                <TabItem Header="Violin" IsVisible="{Binding #isViolin.IsChecked}">
                    <TabItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuItem
                                Header="Copy"
                                IsEnabled="False"
                                />
                            <MenuItem
                                Header="Paste"
                                IsEnabled="False"
                                />
                        </MenuFlyout>
                    </TabItem.ContextFlyout>
                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding OnMainTabRightClickCommand}">
                                <ia:InvokeCommandAction.CommandParameter>
                                    <sys:Int32>7</sys:Int32>
                                </ia:InvokeCommandAction.CommandParameter>
                            </ia:InvokeCommandAction>
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <TextBlock Text="Violin content goes here." />
                </TabItem>
            </TabControl>
        </StackPanel>

        <!-- Standard dialog buttons -->
        <views:DialogMainButtons  DockPanel.Dock="Bottom"/>

        <!-- fill the rest of the dock panel to ensure buttons are at the bottom-->
        <Rectangle/>
    </DockPanel>
    </Border>
</UserControl>
